datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role       String @default("admin")

  email      String    @unique
  password   Password?
  name       String?
  phone      String?
  hourlyRate Float?

  street     String?
  city       String?
  state      String?
  country    String?
  postalCode String?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Customer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  email String  @unique
  phone String?

  street     String?
  city       String?
  state      String?
  country    String?
  postalCode String?

  invoices   Invoice[]
  hourlyRate Float?
}

model Invoice {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  number      Int
  invoiceDate DateTime @default(now())
  dueDate     DateTime

  deposits  Deposit[]
  lineItems LineItem[]

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Deposit {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  amount      Float
  depositDate DateTime @default(now())
  note        String

  invoiceId String
  invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model LineItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  description     String
  quantity        Int
  unitPrice       Float
  isHideUnitPrice Boolean @default(true)

  invoiceId String
  invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model SiteSettings {
  siteName        String  @id
  siteEmail       String?
  sitePhone       String?
  siteStreet      String?
  siteCity        String?
  siteState       String?
  siteCountry     String?
  sitePostalCode  String?
  isHideUnitPrice Boolean @default(true)
}
